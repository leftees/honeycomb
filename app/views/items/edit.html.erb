<%= page_title(@item.name, @item.collection) %>
<%= collection_nav(@item.collection, :items) %>

<%= back_action_bar(@item.back_path, "#" ) %>

<%= link_to("PREVIEW", CreateBeehiveURL.call(@item.object), class: "btn btn-large btn-hollow", :target => "_blank") %>

<div class="row">
  <div class="col-md-8">

    <%= @item.item_meta_data_form %>
<!--
    <% if @item.is_parent? %>
      <div class="item-show-children clearfix">
        <div class="panel panel-default">
          <div class="panel-heading">
            <div class="pull-right">
              <div>
                <%= link_to "#", class: "btn btn-default btn-xs btn-flat", "data-toggle" => "modal", "data-target" => "#add-children-items" do %>
                  <i class="glyphicon glyphicon-plus"></i> <%= t(".children.manage_link") %>
                <% end %>
              </div>
            </div>
            <h3 class="panel-title"><%= t(".children.title") %></h3>
          </div>
          <div class="panel-body">
            <% if @item.recent_children.count > 0 %>

              <%= render partial: "list", locals: { items: @item.recent_children } %>
            <% else %>
              <%= t(".children.empty_message_html") %>
            <% end %>
          </div>
        </div>
      </div>
    <% end %> -->

    <%= DeletePanel.new(@item.object).display(ItemQuery.new(@item)) %>

  </div>
  <div class="col-md-4">
    <div class="panel panel-default item-show-image">
      <div class="panel-heading">
        <div class="pull-right">
          <a href="#" data-toggle="modal" data-target="#add-items" class="check-is-dirty btn btn-xs btn-default btn-flat"><i class="glyphicon glyphicon-refresh"></i> <%= t(".replace_media") %></a>
        </div>
        <h3 class="panel-title"><%= t(".media") %></h3>
      </div>
      <div class="panel-body">
        <%= @item.show_image_box %>
      </div>
    </div>

    <%= react_component("ShowcasesPanel", {
          showcases: @item.showcases_json,
          panelTitle: "Showcases"
        })
    %>

    <%= ItemPublishEmbedPanel.display(@item.object) %>

  </div>
</div>
<!--

<%= react_component("ReactDropzone", {
        formUrl: url_for( @item ),
        authenticityToken: form_authenticity_token,
        modalTitle: t(".replace_item_image_title"),
        multifileUpload: false,
  }) %>

<% if @item.is_parent? %>
  <%= react_component("ReactDropzone", {
          modalId: "add-children-items",
          formUrl: item_children_path(@item),
          authenticityToken: form_authenticity_token,
          modalTitle: t(".children.upload_title"),
          closeText: t(".children.upload_close_text"),
    }) %>
<% end %> -->
